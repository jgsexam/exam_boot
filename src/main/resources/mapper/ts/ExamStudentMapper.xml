<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.exam.ts.mapper.ExamStudentMapper">

    <!-- 通用查询映射结果 -->
    <resultMap id="BaseResultMap" type="com.exam.ts.pojo.ExamStudentDO">
        <id column="st_id" property="stId"/>
        <result column="st_exam" property="stExam"/>
        <result column="st_stu" property="stStu"/>
        <association property="student" resultMap="com.exam.ex.mapper.StudentMapper.BaseResultMap"/>
    </resultMap>

    <!-- 通用查询结果列 -->
    <sql id="Base_Column_List">
        st_id, st_exam, st_stu
    </sql>

    <select id="getByPojo" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from te_exam_student
        inner join te_exam on exam_id = st_exam
        where st_stu = #{stStu}
        and st_exam = #{stExam}
        and exam_state != 2
    </select>

    <select id="getByExamIdAndStudentIds" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        from te_exam_student
        where st_exam = #{examId}
        and st_stu in
        <foreach collection="ids" separator="," open="(" close=")" item="stuId">
            #{stuId}
        </foreach>
    </select>

    <select id="getListByExam" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>,
        <include refid="com.exam.ex.mapper.StudentMapper.Base_Column_List"></include>
        from te_exam_student
        inner join ex_student on st_stu = stu_id
        inner join te_exam on exam_id = #{value}
        where exam_delete = 1
    </select>

    <select id="getListByPage" parameterType="com.exam.core.pojo.Page" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"></include>
        ,<include refid="com.exam.ex.mapper.StudentMapper.Base_Column_List"></include>
        ,college.dict_id as college_id, college.dict_name as college_name
        ,major.dict_id as major_id, major.dict_name as major_name
        from te_exam_student
        inner join te_exam on exam_id = #{params.examId}
        inner join ex_student on stu_id = stu_id
        inner join ex_dict college on stu.stu_college = college.dict_id
        inner join ex_dict major on stu.stu_major = major.dict_id
        <where>
            stu_delete = 1
            <if test="params.majorId!=null and params.majorId!=''">
                and major.dict_id = #{params.majorId}
            </if>
            <if test="params.collegeId!=null and params.collegeId!=''">
                and college.dict_id = #{params.collegeId}
            </if>
            <if test="params.orgCollege!=null and params.orgCollege!=''">
                and stu_college = #{params.orgCollege}
            </if>
            <if test="params.stuSex!=null and params.stuSex!=''">
                and stu_sex = #{params.stuSex}
            </if>
            <if test="params.startTime!='' and params.startTime!=null and params.endTime != '' and params.endTime != null">
                and stu_entrance_time <![CDATA[ >= ]]> #{params.startTime}
                and stu_entrance_time <![CDATA[ <= ]]> #{params.endTime}
            </if>
            <if test="params.stuNumber!=null and params.stuNumber!=''">
                and stu_number like '%${params.stuNumber}%'
            </if>
            <if test="params.stuName!=null and params.stuName!=''">
                and stu_name like '%${params.stuName}%'
            </if>
            <if test="params.stuCard!=null and params.stuCard!=''">
                and stu_card like '%${params.stuCard}%'
            </if>
        </where>
        <if test="sortName==null or sortName==''">
            order by stu_entrance_time desc
        </if>
        <if test="sortName!=null and sortName!=''">
            order by ${sortName} ${sortOrder}
        </if>
        limit #{index}, #{currentCount}
    </select>

    <select id="getCountByPage" parameterType="com.exam.core.pojo.Page" resultType="java.lang.Integer">
        select
        count(st_id)
        from te_exam_student
        inner join te_exam on exam_id = #{params.examId}
        inner join ex_student on stu_id = stu_id
        inner join ex_dict college on stu.stu_college = college.dict_id
        inner join ex_dict major on stu.stu_major = major.dict_id
        <where>
            stu_delete = 1
            <if test="params.majorId!=null and params.majorId!=''">
                and major.dict_id = #{params.majorId}
            </if>
            <if test="params.collegeId!=null and params.collegeId!=''">
                and college.dict_id = #{params.collegeId}
            </if>
            <if test="params.orgCollege!=null and params.orgCollege!=''">
                and stu_college = #{params.orgCollege}
            </if>
            <if test="params.stuSex!=null and params.stuSex!=''">
                and stu_sex = #{params.stuSex}
            </if>
            <if test="params.startTime!='' and params.startTime!=null and params.endTime != '' and params.endTime != null">
                and stu_entrance_time <![CDATA[ >= ]]> #{params.startTime}
                and stu_entrance_time <![CDATA[ <= ]]> #{params.endTime}
            </if>
            <if test="params.stuNumber!=null and params.stuNumber!=''">
                and stu_number like '%${params.stuNumber}%'
            </if>
            <if test="params.stuName!=null and params.stuName!=''">
                and stu_name like '%${params.stuName}%'
            </if>
            <if test="params.stuCard!=null and params.stuCard!=''">
                and stu_card like '%${params.stuCard}%'
            </if>
        </where>
    </select>

</mapper>
